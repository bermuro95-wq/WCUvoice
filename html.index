<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WCUVoice - Wachemo University Student Platform</title>
    
    <!-- Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <style>
        /* Global Styles */
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #2c3e50;
            --success: #2ecc71;
            --warning: #f39c12;
            --danger: #e74c3c;
            --gray: #95a5a6;
            --dark-gray: #7f8c8d;
        }

        [data-theme="dark"] {
            --primary: #34495e;
            --secondary: #2980b9;
            --accent: #c0392b;
            --light: #2c3e50;
            --dark: #ecf0f1;
            --gray: #7f8c8d;
            --dark-gray: #95a5a6;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light);
            color: var(--dark);
            transition: all 0.3s ease;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }

        /* Header Styles */
        header {
            background-color: var(--primary);
            color: white;
            padding: 1rem 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logo img {
            height: 40px;
        }

        .logo h1 {
            font-size: 1.5rem;
        }

        nav ul {
            display: flex;
            list-style: none;
            gap: 20px;
        }

        nav a {
            color: white;
            text-decoration: none;
            padding: 5px 10px;
            border-radius: 4px;
            transition: background-color 0.3s;
        }

        nav a:hover {
            background-color: rgba(255,255,255,0.1);
        }

        .user-menu {
            position: relative;
        }

        .user-dropdown {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background-color: white;
            color: var(--dark);
            min-width: 200px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-radius: 4px;
            overflow: hidden;
            z-index: 10;
        }

        .user-dropdown.show {
            display: block;
        }

        .user-dropdown a {
            display: block;
            padding: 10px 15px;
            color: var(--dark);
            text-decoration: none;
            border-bottom: 1px solid #eee;
        }

        .user-dropdown a:hover {
            background-color: #f5f5f5;
        }

        .auth-buttons {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
        }

        .btn-primary {
            background-color: var(--secondary);
            color: white;
        }

        .btn-secondary {
            background-color: transparent;
            border: 1px solid white;
            color: white;
        }

        .btn:hover {
            opacity: 0.9;
            transform: translateY(-2px);
        }

        /* Main Content */
        main {
            min-height: calc(100vh - 150px);
            padding: 2rem 0;
        }

        .page {
            display: none;
        }

        .page.active {
            display: block;
        }

        /* Home Page */
        .home-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
        }

        .posts-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .post-card {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .post-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .post-author {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #ddd;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .post-title {
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

        .post-content {
            margin-bottom: 15px;
        }

        .post-tags {
            display: flex;
            gap: 5px;
            margin-bottom: 10px;
        }

        .tag {
            background-color: #e0e0e0;
            padding: 3px 8px;
            border-radius: 20px;
            font-size: 0.8rem;
        }

        .post-actions {
            display: flex;
            gap: 15px;
        }

        .action-btn {
            display: flex;
            align-items: center;
            gap: 5px;
            background: none;
            border: none;
            cursor: pointer;
            color: var(--gray);
        }

        .action-btn:hover {
            color: var(--secondary);
        }

        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .sidebar-card {
            background-color: white;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .sidebar-title {
            font-size: 1.1rem;
            margin-bottom: 10px;
            padding-bottom: 5px;
            border-bottom: 1px solid #eee;
        }

        .trending-list, .category-list {
            list-style: none;
        }

        .trending-list li, .category-list li {
            padding: 8px 0;
            border-bottom: 1px solid #f5f5f5;
        }

        .trending-list li:last-child, .category-list li:last-child {
            border-bottom: none;
        }

        /* Forms */
        .form-container {
            max-width: 500px;
            margin: 0 auto;
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--secondary);
        }

        /* Profile Page */
        .profile-header {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }

        .profile-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background-color: #ddd;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            font-weight: bold;
        }

        .profile-info h2 {
            margin-bottom: 10px;
        }

        .profile-stats {
            display: flex;
            gap: 20px;
            margin-top: 10px;
        }

        .stat {
            text-align: center;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .stat-label {
            font-size: 0.8rem;
            color: var(--gray);
        }

        /* Footer */
        footer {
            background-color: var(--primary);
            color: white;
            padding: 2rem 0;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 30px;
        }

        .footer-section h3 {
            margin-bottom: 15px;
            font-size: 1.2rem;
        }

        .footer-section ul {
            list-style: none;
        }

        .footer-section ul li {
            margin-bottom: 8px;
        }

        .footer-section a {
            color: #ddd;
            text-decoration: none;
        }

        .footer-section a:hover {
            color: white;
            text-decoration: underline;
        }

        .copyright {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid rgba(255,255,255,0.1);
            font-size: 0.9rem;
            color: #ddd;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .home-grid {
                grid-template-columns: 1fr;
            }
            
            .footer-content {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .header-content {
                flex-direction: column;
                gap: 15px;
            }
            
            nav ul {
                flex-wrap: wrap;
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .footer-content {
                grid-template-columns: 1fr;
            }
            
            .profile-header {
                flex-direction: column;
                text-align: center;
            }
            
            .profile-stats {
                justify-content: center;
            }
        }

        /* Utility Classes */
        .text-center {
            text-align: center;
        }
        
        .mb-20 {
            margin-bottom: 20px;
        }
        
        .mt-20 {
            margin-top: 20px;
        }
        
        .hidden {
            display: none;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 4px;
            color: white;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            animation: slideIn 0.3s ease;
        }
        
        .notification.success {
            background-color: var(--success);
        }
        
        .notification.error {
            background-color: var(--danger);
        }
        
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        
        .dark-mode-toggle {
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            font-size: 1.2rem;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <i class="fas fa-comments"></i>
                    <h1>WCUVoice</h1>
                </div>
                
                <nav>
                    <ul>
                        <li><a href="#" class="nav-link" data-page="home">Home</a></li>
                        <li><a href="#" class="nav-link" data-page="discussions">Discussions</a></li>
                        <li><a href="#" class="nav-link" data-page="messages">Messages</a></li>
                        <li><a href="#" class="nav-link" data-page="about">About Us</a></li>
                        <li><a href="#" class="nav-link" data-page="contact">Contact</a></li>
                    </ul>
                </nav>
                
                <div class="user-menu">
                    <button id="userMenuBtn" class="btn btn-secondary hidden">
                        <i class="fas fa-user"></i> <span id="userName">User</span> <i class="fas fa-caret-down"></i>
                    </button>
                    
                    <div class="user-dropdown" id="userDropdown">
                        <a href="#" class="nav-link" data-page="profile"><i class="fas fa-user"></i> Profile</a>
                        <a href="#" class="nav-link" data-page="settings"><i class="fas fa-cog"></i> Settings</a>
                        <a href="#" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Logout</a>
                    </div>
                    
                    <div class="auth-buttons" id="authButtons">
                        <button class="btn btn-secondary" id="loginBtn">Login</button>
                        <button class="btn btn-primary" id="signupBtn">Sign Up</button>
                    </div>
                </div>
                
                <button class="dark-mode-toggle" id="darkModeToggle">
                    <i class="fas fa-moon"></i>
                </button>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        <div class="container">
            <!-- Home Page -->
            <div id="home" class="page active">
                <h2 class="mb-20">Recent Discussions</h2>
                
                <div class="home-grid">
                    <div class="posts-container" id="postsContainer">
                        <!-- Posts will be dynamically loaded here -->
                    </div>
                    
                    <div class="sidebar">
                        <div class="sidebar-card">
                            <h3 class="sidebar-title">Trending Topics</h3>
                            <ul class="trending-list" id="trendingList">
                                <!-- Trending topics will be dynamically loaded here -->
                            </ul>
                        </div>
                        
                        <div class="sidebar-card">
                            <h3 class="sidebar-title">Categories</h3>
                            <ul class="category-list" id="categoryList">
                                <!-- Categories will be dynamically loaded here -->
                            </ul>
                        </div>
                        
                        <div class="sidebar-card">
                            <h3 class="sidebar-title">Create New Post</h3>
                            <p>Start a discussion about campus issues or events.</p>
                            <button class="btn btn-primary" id="createPostBtn">Create Post</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Other pages will be implemented similarly -->
            <div id="discussions" class="page">
                <h2>All Discussions</h2>
                <p>Discussion page content will be loaded here.</p>
            </div>
            
            <div id="messages" class="page">
                <h2>Messages</h2>
                <p>Messaging system will be implemented here.</p>
            </div>
            
            <div id="profile" class="page">
                <h2>User Profile</h2>
                <div class="profile-header" id="profileHeader">
                    <!-- Profile content will be dynamically loaded here -->
                </div>
            </div>
            
            <div id="about" class="page">
                <h2>About WCUVoice</h2>
                <p>WCUVoice is a platform created for Wachemo University students to discuss campus issues, share ideas, and connect with fellow students.</p>
                
                <h3>Developer Information</h3>
                <p><strong>Developer:</strong> Yoseph Abebe Ersedo</p>
                <p><strong>University:</strong> Wachemo University</p>
                <p><strong>Department:</strong> Information Systems</p>
                <p><strong>Year:</strong> 2025</p>
                <p><strong>Email:</strong> jossyabebe92@gmail.com</p>
            </div>
            
            <div id="contact" class="page">
                <h2>Contact Us</h2>
                <p>If you have any questions or suggestions, feel free to reach out to us:</p>
                
                <div class="form-container">
                    <form id="contactForm">
                        <div class="form-group">
                            <label for="contactName">Your Name</label>
                            <input type="text" id="contactName" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="contactEmail">Your Email</label>
                            <input type="email" id="contactEmail" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="contactSubject">Subject</label>
                            <input type="text" id="contactSubject" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="contactMessage">Message</label>
                            <textarea id="contactMessage" class="form-control" rows="5" required></textarea>
                        </div>
                        
                        <button type="submit" class="btn btn-primary">Send Message</button>
                    </form>
                </div>
                
                <div class="mt-20">
                    <h3>Other Contact Methods</h3>
                    <p><strong>Phone:</strong> 09-17-33-21-99</p>
                    <p><strong>Email:</strong> jossyabebe92@gmail.com</p>
                </div>
            </div>
            
            <!-- Authentication Pages -->
            <div id="login" class="page">
                <div class="form-container">
                    <h2 class="text-center">Login to WCUVoice</h2>
                    
                    <form id="loginForm">
                        <div class="form-group">
                            <label for="loginEmail">Email</label>
                            <input type="email" id="loginEmail" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="loginPassword">Password</label>
                            <input type="password" id="loginPassword" class="form-control" required>
                        </div>
                        
                        <button type="submit" class="btn btn-primary" style="width: 100%;">Login</button>
                    </form>
                    
                    <div class="text-center mt-20">
                        <p>Don't have an account? <a href="#" id="goToSignup">Sign up here</a></p>
                    </div>
                </div>
            </div>
            
            <div id="signup" class="page">
                <div class="form-container">
                    <h2 class="text-center">Create WCUVoice Account</h2>
                    
                    <form id="signupForm">
                        <div class="form-group">
                            <label for="signupFullName">Full Name</label>
                            <input type="text" id="signupFullName" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="signupEmail">Email</label>
                            <input type="email" id="signupEmail" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="signupPassword">Password</label>
                            <input type="password" id="signupPassword" class="form-control" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="signupDepartment">Department</label>
                            <select id="signupDepartment" class="form-control" required>
                                <option value="">Select Department</option>
                                <!-- Departments will be loaded dynamically -->
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="signupYear">Year of Study</label>
                            <select id="signupYear" class="form-control" required>
                                <option value="">Select Year</option>
                                <option value="1">1st Year</option>
                                <option value="2">2nd Year</option>
                                <option value="3">3rd Year</option>
                                <option value="4">4th Year</option>
                                <option value="5">5th Year</option>
                                <option value="6">6th Year</option>
                                <option value="7">7th Year</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="signupStudentId">Student ID</label>
                            <input type="text" id="signupStudentId" class="form-control" required>
                        </div>
                        
                        <button type="submit" class="btn btn-primary" style="width: 100%;">Create Account</button>
                    </form>
                    
                    <div class="text-center mt-20">
                        <p>Already have an account? <a href="#" id="goToLogin">Login here</a></p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-section">
                    <h3>WCUVoice</h3>
                    <p>A platform for Wachemo University students to discuss campus issues and connect with each other.</p>
                </div>
                
                <div class="footer-section">
                    <h3>Quick Links</h3>
                    <ul>
                        <li><a href="#" class="nav-link" data-page="home">Home</a></li>
                        <li><a href="#" class="nav-link" data-page="discussions">Discussions</a></li>
                        <li><a href="#" class="nav-link" data-page="about">About Us</a></li>
                        <li><a href="#" class="nav-link" data-page="contact">Contact</a></li>
                    </ul>
                </div>
                
                <div class="footer-section">
                    <h3>Resources</h3>
                    <ul>
                        <li><a href="#">FAQ</a></li>
                        <li><a href="#">Terms of Service</a></li>
                        <li><a href="#">Privacy Policy</a></li>
                        <li><a href="#">Community Guidelines</a></li>
                    </ul>
                </div>
                
                <div class="footer-section">
                    <h3>Contact Info</h3>
                    <ul>
                        <li>Developer: Yoseph Abebe Ersedo</li>
                        <li>Email: jossyabebe92@gmail.com</li>
                        <li>Phone: 09-17-33-21-99</li>
                        <li>Wachemo University</li>
                    </ul>
                </div>
            </div>
            
            <div class="copyright">
                &copy; 2025 WCUVoice. All rights reserved. Developed by Yoseph Abebe Ersedo.
            </div>
        </div>
    </footer>

    <!-- Firebase Configuration and App Logic -->
    <script>
        // Firebase configuration
        const firebaseConfig = {
            apiKey: "your-api-key",
            authDomain: "wcuvoice.firebaseapp.com",
            projectId: "wcuvoice",
            storageBucket: "wcuvoice.appspot.com",
            messagingSenderId: "123456789",
            appId: "your-app-id"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
        const db = firebase.firestore();

        // Departments data
        const departments = [
            "Architecture", "Chemical Engineering", "Civil Engineering", "Computer Science",
            "Construction Technology and Management", "Electrical and Computer Engineering",
            "Electro-Mechanical Engineering", "Surveying Engineering", "Information Systems",
            "Information Technology", "Mechanical Engineering", "Software Engineering",
            "Hydraulic and Water Resource Engineering", "Biomedical Engineering", "Biology",
            "Chemistry", "Mathematics", "Statistics", "Biotechnology", "Geology", "Sport Science",
            "Industrial Chemistry", "Anesthesia", "Medicine", "Midwifery", "Comprehensive Nursing",
            "Public Health", "Health Informatics", "Medical Laboratory Technology", "Pharmacy",
            "Surgical Nursing", "Pediatric and Child Health Nursing", "Dental Medicine",
            "Animal Science", "Horticulture", "Natural Resource Management", "Plant Science",
            "Environmental Science", "Food Science and Postharvest Technology", "Agro Economics",
            "Rural Development and Agricultural Extension", "Accounting and Finance", "Management",
            "Economics", "Marketing Management", "Public Administration and Development Management",
            "Tourism and Hotel Management", "Political Science and International Relations",
            "English Language and Literature", "Geography and Environmental Studies",
            "Hadiyissa Language and Literature", "Sociology", "History and Heritage Management",
            "Governance and Development Studies", "Journalism", "Kambatisa", "Psychology",
            "Educational Leadership and Management", "Special Needs and Inclusive Education",
            "Adult and Lifelong Learning", "Law (LLB)", "Veterinary Medicine"
        ];

        // DOM Elements
        const pages = document.querySelectorAll('.page');
        const navLinks = document.querySelectorAll('.nav-link');
        const userMenuBtn = document.getElementById('userMenuBtn');
        const userDropdown = document.getElementById('userDropdown');
        const authButtons = document.getElementById('authButtons');
        const loginBtn = document.getElementById('loginBtn');
        const signupBtn = document.getElementById('signupBtn');
        const logoutBtn = document.getElementById('logoutBtn');
        const goToLogin = document.getElementById('goToLogin');
        const goToSignup = document.getElementById('goToSignup');
        const loginForm = document.getElementById('loginForm');
        const signupForm = document.getElementById('signupForm');
        const contactForm = document.getElementById('contactForm');
        const darkModeToggle = document.getElementById('darkModeToggle');
        const createPostBtn = document.getElementById('createPostBtn');
        const signupDepartment = document.getElementById('signupDepartment');
        const postsContainer = document.getElementById('postsContainer');
        const trendingList = document.getElementById('trendingList');
        const categoryList = document.getElementById('categoryList');
        const profileHeader = document.getElementById('profileHeader');

        // Current user state
        let currentUser = null;

        // Initialize the app
        function initApp() {
            // Populate departments dropdown
            departments.forEach(dept => {
                const option = document.createElement('option');
                option.value = dept;
                option.textContent = dept;
                signupDepartment.appendChild(option);
            });

            // Set up authentication state observer
            auth.onAuthStateChanged(user => {
                if (user) {
                    // User is signed in
                    currentUser = user;
                    showUserMenu();
                    loadUserProfile(user.uid);
                } else {
                    // User is signed out
                    currentUser = null;
                    showAuthButtons();
                }
            });

            // Set up event listeners
            setupEventListeners();

            // Load initial data
            loadPosts();
            loadTrendingTopics();
            loadCategories();
        }

        // Set up all event listeners
        function setupEventListeners() {
            // Navigation
            navLinks.forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    const pageId = link.getAttribute('data-page');
                    showPage(pageId);
                    
                    // Close dropdown if open
                    userDropdown.classList.remove('show');
                });
            });

            // User menu
            userMenuBtn.addEventListener('click', () => {
                userDropdown.classList.toggle('show');
            });

            // Authentication buttons
            loginBtn.addEventListener('click', () => showPage('login'));
            signupBtn.addEventListener('click', () => showPage('signup'));
            logoutBtn.addEventListener('click', handleLogout);
            goToLogin.addEventListener('click', (e) => {
                e.preventDefault();
                showPage('login');
            });
            goToSignup.addEventListener('click', (e) => {
                e.preventDefault();
                showPage('signup');
            });

            // Forms
            loginForm.addEventListener('submit', handleLogin);
            signupForm.addEventListener('submit', handleSignup);
            contactForm.addEventListener('submit', handleContact);

            // Dark mode toggle
            darkModeToggle.addEventListener('click', toggleDarkMode);

            // Create post button
            createPostBtn.addEventListener('click', () => {
                if (currentUser) {
                    // Show create post modal or page
                    alert('Create post functionality will be implemented');
                } else {
                    showNotification('Please log in to create a post', 'error');
                    showPage('login');
                }
            });

            // Close dropdown when clicking outside
            document.addEventListener('click', (e) => {
                if (!userMenuBtn.contains(e.target) && !userDropdown.contains(e.target)) {
                    userDropdown.classList.remove('show');
                }
            });
        }

        // Show specific page
        function showPage(pageId) {
            pages.forEach(page => {
                page.classList.remove('active');
            });
            
            document.getElementById(pageId).classList.add('active');
            
            // Update active nav link
            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('data-page') === pageId) {
                    link.classList.add('active');
                }
            });

            // Load page-specific content
            if (pageId === 'profile' && currentUser) {
                loadUserProfile(currentUser.uid);
            }
        }

        // Show user menu when logged in
        function showUserMenu() {
            authButtons.classList.add('hidden');
            userMenuBtn.classList.remove('hidden');
        }

        // Show auth buttons when logged out
        function showAuthButtons() {
            authButtons.classList.remove('hidden');
            userMenuBtn.classList.add('hidden');
            userDropdown.classList.remove('show');
        }

        // Handle user login
        function handleLogin(e) {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            auth.signInWithEmailAndPassword(email, password)
                .then((userCredential) => {
                    // Signed in successfully
                    showNotification('Login successful!', 'success');
                    showPage('home');
                    loginForm.reset();
                })
                .catch((error) => {
                    showNotification(error.message, 'error');
                });
        }

        // Handle user signup
        function handleSignup(e) {
            e.preventDefault();
            
            const fullName = document.getElementById('signupFullName').value;
            const email = document.getElementById('signupEmail').value;
            const password = document.getElementById('signupPassword').value;
            const department = document.getElementById('signupDepartment').value;
            const year = document.getElementById('signupYear').value;
            const studentId = document.getElementById('signupStudentId').value;
            
            auth.createUserWithEmailAndPassword(email, password)
                .then((userCredential) => {
                    // User created successfully
                    const user = userCredential.user;
                    
                    // Save additional user data to Firestore
                    return db.collection('users').doc(user.uid).set({
                        fullName: fullName,
                        email: email,
                        department: department,
                        year: year,
                        studentId: studentId,
                        createdAt: firebase.firestore.FieldValue.serverTimestamp()
                    });
                })
                .then(() => {
                    showNotification('Account created successfully!', 'success');
                    showPage('profile');
                    signupForm.reset();
                })
                .catch((error) => {
                    showNotification(error.message, 'error');
                });
        }

        // Handle user logout
        function handleLogout() {
            auth.signOut()
                .then(() => {
                    showNotification('Logged out successfully', 'success');
                    showPage('home');
                })
                .catch((error) => {
                    showNotification(error.message, 'error');
                });
        }

        // Handle contact form submission
        function handleContact(e) {
            e.preventDefault();
            
            const name = document.getElementById('contactName').value;
            const email = document.getElementById('contactEmail').value;
            const subject = document.getElementById('contactSubject').value;
            const message = document.getElementById('contactMessage').value;
            
            // Save contact message to Firestore
            db.collection('contacts').add({
                name: name,
                email: email,
                subject: subject,
                message: message,
                timestamp: firebase.firestore.FieldValue.serverTimestamp()
            })
            .then(() => {
                showNotification('Message sent successfully!', 'success');
                contactForm.reset();
            })
            .catch((error) => {
                showNotification('Error sending message: ' + error.message, 'error');
            });
        }

        // Load user profile data
        function loadUserProfile(userId) {
            db.collection('users').doc(userId).get()
                .then((doc) => {
                    if (doc.exists) {
                        const userData = doc.data();
                        document.getElementById('userName').textContent = userData.fullName;
                        
                        // Update profile page if it's active
                        if (document.getElementById('profile').classList.contains('active')) {
                            updateProfilePage(userData);
                        }
                    }
                })
                .catch((error) => {
                    console.error('Error loading user profile:', error);
                });
        }

        // Update profile page with user data
        function updateProfilePage(userData) {
            profileHeader.innerHTML = `
                <div class="profile-avatar">${userData.fullName.split(' ').map(n => n[0]).join('')}</div>
                <div class="profile-info">
                    <h2>${userData.fullName}</h2>
                    <p>${userData.department}, Year ${userData.year}</p>
                    <p>Student ID: ${userData.studentId}</p>
                    <div class="profile-stats">
                        <div class="stat">
                            <div class="stat-value">0</div>
                            <div class="stat-label">Posts</div>
                        </div>
                        <div class="stat">
                            <div class="stat-value">0</div>
                            <div class="stat-label">Likes</div>
                        </div>
                        <div class="stat">
                            <div class="stat-value">0</div>
                            <div class="stat-label">Comments</div>
                        </div>
                    </div>
                </div>
            `;
        }

        // Load posts from Firestore
        function loadPosts() {
            // This would load posts from Firestore
            // For now, we'll keep it empty as per requirement
            postsContainer.innerHTML = '';
        }

        // Load trending topics
        function loadTrendingTopics() {
            // This would load trending topics from Firestore
            // For now, we'll keep it empty as per requirement
            trendingList.innerHTML = '';
        }

        // Load categories
        function loadCategories() {
            // This would load categories from Firestore
            // For now, we'll keep it empty as per requirement
            categoryList.innerHTML = '';
        }

        // Toggle dark mode
        function toggleDarkMode() {
            const body = document.body;
            const isDarkMode = body.getAttribute('data-theme') === 'dark';
            
            if (isDarkMode) {
                body.removeAttribute('data-theme');
                darkModeToggle.innerHTML = '<i class="fas fa-moon"></i>';
                localStorage.setItem('theme', 'light');
            } else {
                body.setAttribute('data-theme', 'dark');
                darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
                localStorage.setItem('theme', 'dark');
            }
        }

        // Show notification
        function showNotification(message, type) {
            // Remove existing notifications
            const existingNotifications = document.querySelectorAll('.notification');
            existingNotifications.forEach(notification => {
                notification.remove();
            });
            
            // Create new notification
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Check for saved theme preference
        function checkSavedTheme() {
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                document.body.setAttribute('data-theme', 'dark');
                darkModeToggle.innerHTML = '<i class="fas fa-sun"></i>';
            }
        }

        // Initialize the app when DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            checkSavedTheme();
            initApp();
        });
    </script>
</body>
</html>
